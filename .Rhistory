library(tidyr)
library(tidyverse)
library(dplyr)
library(knitr)
library(lattice)
library(fBasics)
library(rgl)
library(ggforce)
library(ks)
library(esquisse)
library(datarium)
library(psych)
library(readxl)
library(lmtest) #Pour le test d'homosecedasticité
library(afex)
library(ggpubr)
library(rstatix)
library(lme4)
library(MASS)
library(nortest)
library(car)
library(Rmisc)
library(multcomp)
library(Publish)
library(ggcorrplot)
library(robustbase)
library(glmnet)
library(lmtest)
library(sandwich)
library(PerformanceAnalytics)
library(corrplot)
knitr::opts_chunk$set(echo = FALSE, cache=TRUE, message = FALSE, warning = FALSE)
eml = read_excel("base_eml.xlsx")
ml <- eml |>
mutate(across(everything(), ~round(., 1)))
entt = head(ml, 5)
kable(entt, caption = "Base début", digits = 1, padding = 0)
final = tail(eml, 5)
kable(final, caption = "Base fin", digits = 1, padding =0)
dim(eml)
datas_Means.Table = describe(eml)
knitr::kable(datas_Means.Table, digits = 1, caption = 'Tendances centrales', padding = 0)
datas = subset(eml, select = -c(countries, popT, under_18, under_5))
kable(head(datas, 5), caption = "Nouveau data set", digits = 1, padding =0)
ggplot(datas) +
aes(x = cdi, y =yi
) +
geom_point(shape = "circle",
size = 1.5, colour = "#112446") +
geom_smooth(span = 0.75) +
theme_minimal()
ggplot(datas) +
aes(x =cbi, y =yi
) +
geom_point(shape = "circle",
size = 1.5, colour = "#112446") +
geom_smooth(span = 0.75) +
theme_minimal()
ggplot(datas) +
aes(x = life_exp , y =yi
) +
geom_point(shape = "circle",
size = 1.5, colour = "#112446") +
geom_smooth(span = 0.75) +
theme_minimal()
ggplot(datas) +
aes(x = tot_fert , y = yi
) +
geom_point(shape = "circle",
size = 1.5, colour = "#112446") +
geom_smooth(span = 0.75) +
theme_minimal()
ggplot(datas) +
aes(x = urb_pop, y = yi
) +
geom_point(shape = "circle",
size = 1.5, colour = "#112446") +
geom_smooth(span = 0.75) +
theme_minimal()
ggplot(datas) +
aes(x =popurb , y =yi
) +
geom_point(shape = "circle",
size = 1.5, colour = "#112446") +
geom_smooth(span = 0.75) +
theme_minimal()
kable(cor(datas), caption = "Matrice de corrélation", digits = 1, padding=0)
datas1 = subset(datas, select=-c(life_exp,urb_pop,tot_fert))
kable(head(datas1, 5), caption = "Nouveau jeu de donnée après observation des correlations")
corrr = cor(datas1)
kable(corrr, caption = "Nouvelles corrélations", digits = 1, padding = 0)
chart.Correlation(datas1, histogram=TRUE, pch=19)
#col= colorRampPalette(c("blue", "white", "red"))(20)
#heatmap(x =corrr, col = col, symm = TRUE)
ggcorrplot(cor(datas1), type = "lower", outline.color = "white", colors = c("#6D9EC1", "white", "#E46726"), lab = TRUE)
corrplot(corrr, type="upper", order="hclust", tl.col="black", tl.srt=45)
par(mfrow = c(1, 4))
ggplot(datas1) +
aes(x = cdi) +
geom_histogram(bins = 30L, fill = "#0656E5") +
theme_minimal()
ggplot(datas1) +
aes(x = cbi) +
geom_histogram(bins = 30L, fill = "#0753DC") +
theme_minimal()
ggplot(datas1) +
aes(x = popurb
) +
geom_histogram(bins = 30L, fill = "#0752D7") +
theme_minimal()
boxplot(datas1$cdi, col = "blue")
boxplot(datas1$cbi, col = "cyan")
boxplot(datas1$popurb, col = "green")
boxplot(datas1$yi, col = "magenta")
ggplot(data = datas1, aes(x = yi)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, color = "black", fill = "skyblue") +
geom_density(color = "red") +
labs(x = "Valeur de y", y = "Fréquence") +
theme_classic()
shapiro.test(datas1$yi)
lillie.test(datas1$yi)
res1 = lm(yi~cdi+cbi+popurb, data = datas1)
res1
kable(res1$coefficients, caption = "Estimation des coefficients")
summary(res1)
confint(res1)
plot(res1, 2, col = "blue")
#plot(density(residuals(res1)), ylab = "", xlab = "", main = "", col ="blue")
dwtest(res1)
plot(res1, 3, pch =19, col ="blue")
bptest(res1)
ncvTest(res1)
gqtest(res1)
spreadLevelPlot(res1)
spreadLevelPlot(res1, smooth = FALSE)
lambda = 0.6909239
datas1$yi1 = ((datas$yi)^lambda -1)/lambda
res2 =lm(yi1~cdi+cbi+popurb, data = datas1)
summary(res2)
ncvTest(res2)
residuals <- summary(res1)$residuals
variance <- var(residuals)
corrected_data <- datas1 |> mutate(yi= log(yi))
res5 = glm(yi~cdi+cbi+popurb, data = corrected_data)
summary(res5)
lillie.test(res5$residuals)
plot(res5$residuals, pch = 20, col = "blue", xlab = "")
plot(res5, 3, pch =19, col = "blue")
bptest(res5, studentize=TRUE)
gqtest(res5)
predicted = predict(res5)
predite_obs = matrix(c(head(log(datas1$yi), 10), head(predicted, 10)), ncol = 2)
colnames(predite_obs) = c("Valeurs observées", "Valeurs prédites")
on_compar =kable(tail(predite_obs,3), caption = "Valeurs prédites et valeurs observées")
on_compar
predict(res5, newdata=data.frame(cdi = 80, cbi= 25.90,
popurb= 10.80),
se.fit=TRUE,
interval = "prediction",
level = 0.99)
predict(res5, newdata=data.frame(cdi = 2, cbi= 80.90,
popurb= 70.80),
se.fit=TRUE,
interval = "prediction",
level = 0.99)
datas1$group <- ifelse(datas1$cbi <= median(datas1$cbi), 0, 1)
chow_test <- coeftest(res5, vcov = sandwich, df = Inf, null = "Chow")
summary(chow_test)
chow_test
